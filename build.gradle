plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'java'
	id 'com.bmuschko.docker-remote-api' version '3.2.5'
}

apply plugin: 'io.spring.dependency-management'

group = 'pl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	jcenter()
}

ext {
	set('springBootAdminVersion', '2.1.4')
}

jar {
	manifest {
		attributes(
				'WorkoutApplication': 'pl.workout.WorkoutApplication'
		)
	}
}

docker {
	registryCredentials {
		username = getConfigurationProperty('DOCKER_USERNAME', 'docker.username')
		password = getConfigurationProperty('DOCKER_PASSWORD', 'docker.password')
		email = getConfigurationProperty('DOCKER_EMAIL', 'docker.email')
	}
}

String getConfigurationProperty(String envVar, String sysProp) {
	System.getenv(envVar) ?: project.findProperty(sysProp)
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'de.codecentric:spring-boot-admin-starter-server'
	implementation 'org.springframework.session:spring-session-core'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.5.RELEASE'
	compile group: 'org.springframework.security', name: 'spring-security-oauth2-client'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	compile group: 'org.springframework.security', name: 'spring-security-crypto'
	compile group: 'com.aries', name: 'docker-java-shaded', version: '3.0.14.'
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile

task createDockerfile(type: Dockerfile) {
	destFile = project.file('docker/Dockerfile')
	from 'openjdk:8-jre-alpine'
	maintainer 'Dawid Witek "dwitekw@gmail.com"'
	copyFile '.', '/app.jar'
	entryPoint 'java'
	defaultCommand '-jar', '/app.jar'
	exposePort 9380
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task buildImage(type: DockerBuildImage) {
	dependsOn createDockerfile
	inputDir = createDockerfile.destFile.parentFile
	tag = "dawd333/web-workout-manager:0.0.1"
}

import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

task pushImage(type: DockerPushImage) {
	dependsOn buildImage
	conventionMapping.imageName = { buildImage.getTag() }
}

